name: 'Coverage Steps for Daily Test Improver'
description: 'Runs tests and generates coverage reports for containerd'
runs:
  using: 'composite'
  steps:
    - name: Install dependencies
      shell: bash
      run: |
        sudo apt-get update
        sudo apt-get install -y gperf dmsetup strace xfsprogs
        make install-deps

    - name: Install gotestsum for test output
      shell: bash
      run: script/setup/install-gotestsum
      
    - name: Build containerd binaries
      shell: bash
      env:
        CGO_ENABLED: 1
      run: |
        make build
        make binaries GO_BUILD_FLAGS="-mod=vendor"

    - name: Run unit tests with coverage
      shell: bash
      continue-on-error: true
      env:
        GOTESTSUM_JUNITFILE: ${{ github.workspace }}/test-unit-coverage-junit.xml
        GOTESTSUM_JSONFILE: ${{ github.workspace }}/test-unit-coverage-gotest.json
        GOTEST: gotestsum --
      run: |
        make coverage || echo "Warning: Unit test coverage failed, continuing with pipeline"

    - name: Run root tests with coverage
      shell: bash
      continue-on-error: true
      env:
        GOTESTSUM_JUNITFILE: ${{ github.workspace }}/test-root-coverage-junit.xml
        GOTESTSUM_JSONFILE: ${{ github.workspace }}/test-root-coverage-gotest.json
        GOTEST: gotestsum --
      run: |
        sudo -E PATH=$PATH make root-coverage || echo "Warning: Root test coverage failed, continuing with pipeline"

    - name: Generate coverage report
      shell: bash
      continue-on-error: true
      run: |
        if [ -f coverage.txt ]; then
          echo "Coverage file generated successfully"
          # Create a readable coverage summary
          go tool cover -func=coverage.txt > coverage-summary.txt || echo "Warning: Failed to generate coverage summary"
          echo "Coverage summary generated"
          
          # Show overall coverage percentage
          total_coverage=$(go tool cover -func=coverage.txt | tail -1 | awk '{print $3}') || echo "0%"
          echo "Total coverage: $total_coverage"
          echo "TOTAL_COVERAGE=$total_coverage" >> $GITHUB_ENV
        else
          echo "Warning: coverage.txt not found"
          echo "TOTAL_COVERAGE=0%" >> $GITHUB_ENV
        fi

    - name: Upload coverage report as artifact
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: coverage-report
        path: |
          coverage.txt
          coverage-summary.txt
          *-junit.xml
          *-gotest.json
        retention-days: 7

    - name: Display coverage summary
      shell: bash
      continue-on-error: true
      run: |
        echo "## Coverage Summary" >> $GITHUB_STEP_SUMMARY || echo "Failed to write to step summary"
        if [ -f coverage-summary.txt ]; then
          echo '```' >> $GITHUB_STEP_SUMMARY || true
          tail -20 coverage-summary.txt >> $GITHUB_STEP_SUMMARY || true
          echo '```' >> $GITHUB_STEP_SUMMARY || true
          echo "**Total Coverage: ${TOTAL_COVERAGE:-unknown}**" >> $GITHUB_STEP_SUMMARY || true
        else
          echo "⚠️ Coverage report not generated" >> $GITHUB_STEP_SUMMARY || true
        fi